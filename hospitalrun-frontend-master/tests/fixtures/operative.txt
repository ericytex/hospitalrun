{"version":"1.2.5","db_type":"http","start_time":"2017-03-16T14:45:48.979Z","db_info":{"db_name":"main","doc_count":34,"doc_del_count":0,"update_seq":35,"purge_seq":0,"compact_running":false,"disk_size":77928,"data_size":23437,"instance_start_time":"1489675508563860","disk_format_version":6,"committed_update_seq":35,"host":"http://localhost:5984/main/","auto_compaction":false,"adapter":"http"}}
{"docs":[{"_id":"_design/appointments_by_date","_rev":"1-5df29f1d7dbd39d6b3a2145923ab73cf","version":7,"views":{"appointments_by_date":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'appointment') {\n        var endDate = doc.data.endDate;\n    if (endDate && endDate !== \"\") {\n      endDate = new Date(endDate);\n      if (endDate.getTime) {\n        endDate = endDate.getTime();\n      }\n    }\n    var startDate = doc.data.startDate;\n    if (startDate && startDate !== \"\") {\n      startDate = new Date(startDate);\n      if (startDate.getTime) {\n        startDate = startDate.getTime();\n      }\n    }\n    if (doc.data.appointmentType !== 'Surgery') {\n      emit([startDate, endDate, doc._id]);\n    }\n      }\n    }\n  }"}},"lists":{"sort":"function(head, req) {function keysEqual(keyA, keyB) {for (var i= 0; i < keyA.length; i++) {if (keyA[i] !== keyB[i]) {return false;}}return true;}function getCompareDate(dateString) {if (!dateString || dateString === \"\") {return 0;}return new Date(dateString).getTime();}function compareStrings(aString, bString) {if (!aString) {aString = \"\";}if (!bString) {bString = \"\";}if (aString < bString) {return -1;} else if (aString > bString) {return 1;} else {return 0;}}var row,rows=[],startingPosition = 0;while(row = getRow()) {rows.push(row);}rows = rows.filter(function (row) {\n    var filterBy = null;\n    var includeRow = true;\n    if (req.query && req.query.filterBy) {\n      filterBy = JSON.parse(req.query.filterBy);\n    }\n    if (!filterBy) {\n      return true;\n    }\n    for (var i = 0; i < filterBy.length; i++) {\n      var currentValue = row.doc.data[filterBy[i].name];\n      if (filterBy[i].name === 'status' && (!currentValue || currentValue === '')) {\n        currentValue = 'Scheduled';\n      }\n      if (currentValue !== filterBy[i].value) {\n        includeRow = false;\n        break;\n      }\n    }\n    return includeRow;\n  });rows.sort(function (a, b) {\n    function defaultStatus(value) {\n      if (!value || value === '') {\n        return 'Scheduled';\n      } else {\n        return value;\n      }\n    }\n    var sortBy = '';\n    if (req.query && req.query.sortKey) {\n      sortBy = req.query.sortKey;\n    }\n    switch (sortBy) {\n      case 'appointmentType':\n      case 'location':\n      case 'provider':\n        return compareStrings(a.doc.data[sortBy], b.doc.data[sortBy]);\n      case 'date':\n        {\n          var startDiff = getCompareDate(a.doc.data.startDate) - getCompareDate(b.doc.data.startDate);\n          if (startDiff === 0) {\n            return getCompareDate(a.doc.data.endDate) - getCompareDate(b.doc.data.endDate);\n          } else {\n            return startDiff;\n          }\n        }\n      case 'status':\n        {\n          var aStatus = defaultStatus(a.doc.data[sortBy]);\n          var bStatus = defaultStatus(b.doc.data[sortBy]);\n          return compareStrings(aStatus, bStatus);\n        }\n      default:\n        {\n          return 0; // Don't sort\n        }\n    }\n  });if (req.query.sortDesc) {rows = rows.reverse();}if (req.query.sortStartKey) {var startKey = JSON.parse(req.query.sortStartKey);for (var i=0; i<rows.length; i++) {if (keysEqual(startKey, rows[i].key)) {startingPosition = i;break;}}}if (req.query.sortLimit) {rows = rows.slice(startingPosition, parseInt(req.query.sortLimit)+startingPosition);} else if (startingPosition > 0) {rows = rows.slice(startingPosition);}send(JSON.stringify({\"rows\" : rows}));}"}}]}
{"seq":2}
{"docs":[{"_id":"_design/custom_form_by_type","_rev":"1-ddf0ee75c1e8e859d821a9f5c1ec43b6","version":1,"views":{"custom_form_by_type":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'customForm') {\n        emit(doc.data.formType);\n      }\n    }\n  }"}}}]}
{"seq":3}
{"docs":[{"_id":"_design/appointments_by_patient","_rev":"1-9a97acd5b8fd071ad81afc9e730721c5","version":4,"views":{"appointments_by_patient":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'appointment') {\n        var endDate = doc.data.endDate;\n    if (endDate && endDate !== \"\") {\n      endDate = new Date(endDate);\n      if (endDate.getTime) {\n        endDate = endDate.getTime();\n      }\n    }\n    var startDate = doc.data.startDate;\n    if (startDate && startDate !== \"\") {\n      startDate = new Date(startDate);\n      if (startDate.getTime) {\n        startDate = startDate.getTime();\n      }\n    }\n    emit([doc.data.patient, startDate, endDate,doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/closed_incidents_by_user","_rev":"1-bf16176c13be57af9a4f1a0980710190","version":1,"views":{"closed_incidents_by_user":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'incident') {\n        if (doc.data.status === \"Closed\") {\n      emit([doc.data.reportedBy, doc._id]);\n    }\n      }\n    }\n  }"}}},{"_id":"_design/imaging_by_status","_rev":"1-1a3bab3d2d1403299a9e4ad8dffe5fa1","version":4,"views":{"imaging_by_status":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'imaging') {\n        var imagingDate = doc.data.imagingDate;\n    if (imagingDate && imagingDate !== \"\") {\n      imagingDate = new Date(imagingDate);\n      if (imagingDate.getTime) {\n        imagingDate = imagingDate.getTime();\n      }\n    }\n    var requestedDate = doc.data.requestedDate;\n    if (requestedDate && requestedDate !== \"\") {\n      requestedDate = new Date(requestedDate);\n      if (requestedDate.getTime) {\n        requestedDate = requestedDate.getTime();\n      }\n    }\n    emit([doc.data.status, requestedDate, imagingDate, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/incident_by_date","_rev":"1-59fa59734ee129cff0560b20a95d2d4e","version":1,"views":{"incident_by_date":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'incident') {\n        var dateOfIncident = doc.data.dateOfIncident;\n    if (dateOfIncident && dateOfIncident !== \"\") {\n      dateOfIncident = new Date(dateOfIncident);\n      if (dateOfIncident.getTime) {\n        dateOfIncident = dateOfIncident.getTime();\n      }\n    }\n    emit([dateOfIncident, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/incident_by_friendly_id","_rev":"1-885a12b67da47e956bc190fe1fe0d4e6","version":1,"views":{"incident_by_friendly_id":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'incident') {\n        emit([doc.data.friendlyId, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/inventory_by_friendly_id","_rev":"1-82e24378f074a284cae14da4db5431ed","version":1,"views":{"inventory_by_friendly_id":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'inventory') {\n        emit([doc.data.friendlyId, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/inventory_by_name","_rev":"1-91f55ae6bd30f766d9da95bffe054bcb","version":5,"views":{"inventory_by_name":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'inventory') {\n        emit([doc.data.name, doc._id]);\n      }\n    }\n  }"}},"lists":{"sort":"function(head, req) {function keysEqual(keyA, keyB) {for (var i= 0; i < keyA.length; i++) {if (keyA[i] !== keyB[i]) {return false;}}return true;}function compareStrings(aString, bString) {if (!aString) {aString = \"\";}if (!bString) {bString = \"\";}if (aString < bString) {return -1;} else if (aString > bString) {return 1;} else {return 0;}}var row,rows=[],startingPosition = 0;while(row = getRow()) {rows.push(row);}rows.sort(function (a, b) {\n      var sortBy = '';\n      if (req.query && req.query.sortKey) {\n        sortBy = req.query.sortKey;\n      }\n      switch (sortBy) {\n        case 'crossReference':\n        case 'description':\n        case 'friendlyId':\n        case 'name':\n        case 'price':\n        case 'quantity':\n        case 'inventoryType':\n          {\n            return compareStrings(a.doc.data[sortBy], b.doc.data[sortBy]);\n          }\n        default:\n          {\n            return 0; // Don't sort\n          }\n      }\n    });if (req.query.sortDesc) {rows = rows.reverse();}if (req.query.sortStartKey) {var startKey = JSON.parse(req.query.sortStartKey);for (var i=0; i<rows.length; i++) {if (keysEqual(startKey, rows[i].key)) {startingPosition = i;break;}}}if (req.query.sortLimit) {rows = rows.slice(startingPosition, parseInt(req.query.sortLimit)+startingPosition);} else if (startingPosition > 0) {rows = rows.slice(startingPosition);}send(JSON.stringify({\"rows\" : rows}));}"}},{"_id":"_design/inventory_by_type","_rev":"1-18455500e1e86544edceaab01bb511bc","version":5,"views":{"inventory_by_type":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'inventory') {\n        emit(doc.data.inventoryType);\n      }\n    }\n  }"}}},{"_id":"_design/inventory_purchase_by_date_received","_rev":"1-0d7b597aeae746589980b12903768252","version":5,"views":{"inventory_purchase_by_date_received":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'invPurchase') {\n        var dateReceived = doc.data.dateReceived;\n    if (dateReceived && dateReceived !== \"\") {\n      dateReceived = new Date(dateReceived);\n      if (dateReceived.getTime) {\n        dateReceived = dateReceived.getTime();\n      }\n    }\n    emit([dateReceived, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/inventory_purchase_by_expiration_date","_rev":"1-1f41dd6d030c58884d7013ef9436decb","version":5,"views":{"inventory_purchase_by_expiration_date":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'invPurchase') {\n        var expirationDate = doc.data.expirationDate;\n    if (expirationDate && expirationDate !== \"\") {\n      expirationDate = new Date(expirationDate);\n      if (expirationDate.getTime) {\n        expirationDate = expirationDate.getTime();\n      }\n    }\n    emit([expirationDate, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/inventory_request_by_item","_rev":"1-021f4c24b5b6202594f610cf5d4c63a4","version":5,"views":{"inventory_request_by_item":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'invRequest') {\n        var dateCompleted = doc.data.dateCompleted;\n    if (dateCompleted && dateCompleted !== \"\") {\n      dateCompleted = new Date(dateCompleted);\n      if (dateCompleted.getTime) {\n        dateCompleted = dateCompleted.getTime();\n      }\n    }\n    emit([doc.data.inventoryItem, doc.data.status, dateCompleted]);\n      }\n    }\n  }"}}},{"_id":"_design/inventory_request_by_status","_rev":"1-cc0c1e0e01060aa62456d6ea768d8ec7","version":5,"views":{"inventory_request_by_status":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'invRequest') {\n        var dateCompleted = doc.data.dateCompleted;\n    if (dateCompleted && dateCompleted !== \"\") {\n      dateCompleted = new Date(dateCompleted);\n      if (dateCompleted.getTime) {\n        dateCompleted = dateCompleted.getTime();\n      }\n    }\n    emit([doc.data.status, dateCompleted, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/invoice_by_patient","_rev":"1-9f67a58d4e428614844ac82cb2548268","version":1,"views":{"invoice_by_patient":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'invoice') {\n        emit(doc.data.patient);\n      }\n    }\n  }"}}},{"_id":"_design/invoice_by_status","_rev":"1-d411e6f66f897f0b9b985dc6e5188d85","version":4,"views":{"invoice_by_status":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'invoice') {\n        var billDate = doc.data.billDate;\n    if (billDate && billDate !== \"\") {\n      billDate = new Date(billDate);\n      if (billDate.getTime) {\n        billDate = billDate.getTime();\n      }\n    }\n    emit([doc.data.status, billDate, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/lab_by_status","_rev":"1-7d4de6e219b482171b7ecd485ef72238","version":4,"views":{"lab_by_status":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'lab') {\n        var labDate = doc.data.labDate;\n    if (labDate && labDate !== \"\") {\n      labDate = new Date(labDate);\n      if (labDate.getTime) {\n        labDate = labDate.getTime();\n      }\n    }\n    var requestedDate = doc.data.requestedDate;\n    if (requestedDate && requestedDate !== \"\") {\n      requestedDate = new Date(requestedDate);\n      if (requestedDate.getTime) {\n        requestedDate = requestedDate.getTime();\n      }\n    }\n    emit([doc.data.status, requestedDate, labDate, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/medication_by_status","_rev":"1-a6403c53b2db46905b3b1861120c6601","version":4,"views":{"medication_by_status":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'medication') {\n        var prescriptionDate = doc.data.prescriptionDate;\n    if (prescriptionDate && prescriptionDate !== \"\") {\n      prescriptionDate = new Date(prescriptionDate);\n      if (prescriptionDate.getTime) {\n        prescriptionDate = prescriptionDate.getTime();\n      }\n    }\n    var requestedDate = doc.data.requestedDate;\n    if (requestedDate && requestedDate !== \"\") {\n      requestedDate = new Date(requestedDate);\n      if (requestedDate.getTime) {\n        requestedDate = requestedDate.getTime();\n      }\n    }\n    emit([doc.data.status, requestedDate, prescriptionDate, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/open_incidents_by_user","_rev":"1-34770efd210920a30c96d3787521e8a5","version":1,"views":{"open_incidents_by_user":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'incident') {\n        if (doc.data.status !== \"Closed\") {\n      emit([doc.data.reportedBy, doc._id]);\n    }\n      }\n    }\n  }"}},"lists":{"sort":"function(head, req) {function keysEqual(keyA, keyB) {for (var i= 0; i < keyA.length; i++) {if (keyA[i] !== keyB[i]) {return false;}}return true;}function compareStrings(aString, bString) {if (!aString) {aString = \"\";}if (!bString) {bString = \"\";}if (aString < bString) {return -1;} else if (aString > bString) {return 1;} else {return 0;}}var row,rows=[],startingPosition = 0;while(row = getRow()) {rows.push(row);}rows.sort(function (a, b) {\n      var sortBy = '';\n      if (req.query && req.query.sortKey) {\n        sortBy = req.query.sortKey;\n        return compareStrings(a.doc.data[sortBy], b.doc.data[sortBy]);\n      }\n      return 0; // Don't sort\n    });if (req.query.sortDesc) {rows = rows.reverse();}if (req.query.sortStartKey) {var startKey = JSON.parse(req.query.sortStartKey);for (var i=0; i<rows.length; i++) {if (keysEqual(startKey, rows[i].key)) {startingPosition = i;break;}}}if (req.query.sortLimit) {rows = rows.slice(startingPosition, parseInt(req.query.sortLimit)+startingPosition);} else if (startingPosition > 0) {rows = rows.slice(startingPosition);}send(JSON.stringify({\"rows\" : rows}));}"}},{"_id":"_design/patient_by_admission","_rev":"1-3c2da4380d257c95ebf4430afa48de3b","version":4,"views":{"patient_by_admission":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'patient') {\n        if (doc.data.admitted === true) {\n      if (doc.data.friendlyId) {\n    emit([doc.data.friendlyId, doc._id]);\n  } else if (doc.data.externalPatientId) {\n    emit([doc.data.externalPatientId, doc._id]);\n  } else {\n    emit([doc._id, doc._id]);\n }\n    }\n      }\n    }\n  }"}},"lists":{"sort":"function(head, req) {function keysEqual(keyA, keyB) {for (var i= 0; i < keyA.length; i++) {if (keyA[i] !== keyB[i]) {return false;}}return true;}function getCompareDate(dateString) {if (!dateString || dateString === \"\") {return 0;}return new Date(dateString).getTime();}function compareStrings(aString, bString) {if (!aString) {aString = \"\";}if (!bString) {bString = \"\";}if (aString < bString) {return -1;} else if (aString > bString) {return 1;} else {return 0;}}var row,rows=[],startingPosition = 0;while(row = getRow()) {rows.push(row);}rows.sort(function (a, b) {\n    var sortBy = '';\n    if (req.query && req.query.sortKey) {\n      sortBy = req.query.sortKey;\n    }\n    switch (sortBy) {\n      case 'firstName':\n      case 'sex':\n      case 'lastName':\n      case 'status':\n        {\n          return compareStrings(a.doc.data[sortBy], b.doc.data[sortBy]);\n        }\n      case 'dateOfBirth':\n        {\n          return getCompareDate(a.doc.data.dateOfBirth) - getCompareDate(b.doc.data.dateOfBirth);\n        }\n      default:\n        {\n          return 0; // Don't sort\n        }\n    }\n  });if (req.query.sortDesc) {rows = rows.reverse();}if (req.query.sortStartKey) {var startKey = JSON.parse(req.query.sortStartKey);for (var i=0; i<rows.length; i++) {if (keysEqual(startKey, rows[i].key)) {startingPosition = i;break;}}}if (req.query.sortLimit) {rows = rows.slice(startingPosition, parseInt(req.query.sortLimit)+startingPosition);} else if (startingPosition > 0) {rows = rows.slice(startingPosition);}send(JSON.stringify({\"rows\" : rows}));}"}},{"_id":"_design/patient_by_display_id","_rev":"1-8a6930002af6d588ecdedd5f07da0230","version":7,"views":{"patient_by_display_id":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'patient') {\n        if (doc.data.friendlyId) {\n    emit([doc.data.friendlyId, doc._id]);\n  } else if (doc.data.externalPatientId) {\n    emit([doc.data.externalPatientId, doc._id]);\n  } else {\n    emit([doc._id, doc._id]);\n }\n      }\n    }\n  }"}},"lists":{"sort":"function(head, req) {function keysEqual(keyA, keyB) {for (var i= 0; i < keyA.length; i++) {if (keyA[i] !== keyB[i]) {return false;}}return true;}function getCompareDate(dateString) {if (!dateString || dateString === \"\") {return 0;}return new Date(dateString).getTime();}function compareStrings(aString, bString) {if (!aString) {aString = \"\";}if (!bString) {bString = \"\";}if (aString < bString) {return -1;} else if (aString > bString) {return 1;} else {return 0;}}var row,rows=[],startingPosition = 0;while(row = getRow()) {rows.push(row);}rows.sort(function (a, b) {\n    var sortBy = '';\n    if (req.query && req.query.sortKey) {\n      sortBy = req.query.sortKey;\n    }\n    switch (sortBy) {\n      case 'firstName':\n      case 'sex':\n      case 'lastName':\n      case 'status':\n        {\n          return compareStrings(a.doc.data[sortBy], b.doc.data[sortBy]);\n        }\n      case 'dateOfBirth':\n        {\n          return getCompareDate(a.doc.data.dateOfBirth) - getCompareDate(b.doc.data.dateOfBirth);\n        }\n      default:\n        {\n          return 0; // Don't sort\n        }\n    }\n  });if (req.query.sortDesc) {rows = rows.reverse();}if (req.query.sortStartKey) {var startKey = JSON.parse(req.query.sortStartKey);for (var i=0; i<rows.length; i++) {if (keysEqual(startKey, rows[i].key)) {startingPosition = i;break;}}}if (req.query.sortLimit) {rows = rows.slice(startingPosition, parseInt(req.query.sortLimit)+startingPosition);} else if (startingPosition > 0) {rows = rows.slice(startingPosition);}send(JSON.stringify({\"rows\" : rows}));}"}},{"_id":"_design/patient_by_status","_rev":"1-54bc74ff93db4aedff83bc649f766596","version":3,"views":{"patient_by_status":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'patient') {\n        emit(doc.data.status);\n      }\n    }\n  }"}}},{"_id":"_design/photo_by_patient","_rev":"1-6a4fad4fa682efbbd058e858c328574f","version":4,"views":{"photo_by_patient":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'photo') {\n        emit(doc.data.patient);\n      }\n    }\n  }"}}},{"_id":"_design/pricing_by_category","_rev":"1-3d703b5f240ae5838d1f20a8ad0471de","version":5,"views":{"pricing_by_category":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'pricing') {\n        emit([doc.data.category, doc.data.name, doc.data.pricingType, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/procedure_by_date","_rev":"1-a44decd8f14d01c615cf3f5b8e70f10b","version":4,"views":{"procedure_by_date":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'procedure') {\n        var procedureDate = doc.data.procedureDate;\n    if (procedureDate && procedureDate !== \"\") {\n      procedureDate = new Date(procedureDate);\n      if (procedureDate.getTime) {\n        procedureDate = procedureDate.getTime();\n      }\n    }\n    emit([procedureDate, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/report_by_visit","_rev":"1-1295cef10df82554859efdb4c38c1c1e","version":1,"views":{"report_by_visit":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'report') {\n        emit(doc.data.visit);\n      }\n    }\n  }"}}},{"_id":"_design/sequence_by_prefix","_rev":"1-10f81c9287f2db782b8e293e7d9b1cde","version":4,"views":{"sequence_by_prefix":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'sequence') {\n        emit(doc.data.prefix);\n      }\n    }\n  }"}}},{"_id":"_design/surgical_appointments_by_date","_rev":"1-90d8de834de1fe0e154d1cdab8889984","version":1,"views":{"surgical_appointments_by_date":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'appointment') {\n        var endDate = doc.data.endDate;\n    if (endDate && endDate !== \"\") {\n      endDate = new Date(endDate);\n      if (endDate.getTime) {\n        endDate = endDate.getTime();\n      }\n    }\n    var startDate = doc.data.startDate;\n    if (startDate && startDate !== \"\") {\n      startDate = new Date(startDate);\n      if (startDate.getTime) {\n        startDate = startDate.getTime();\n      }\n    }\n    if (doc.data.appointmentType === 'Surgery') {\n      emit([startDate, endDate, doc._id]);\n    }\n      }\n    }\n  }"}},"lists":{"sort":"function(head, req) {function keysEqual(keyA, keyB) {for (var i= 0; i < keyA.length; i++) {if (keyA[i] !== keyB[i]) {return false;}}return true;}function getCompareDate(dateString) {if (!dateString || dateString === \"\") {return 0;}return new Date(dateString).getTime();}function compareStrings(aString, bString) {if (!aString) {aString = \"\";}if (!bString) {bString = \"\";}if (aString < bString) {return -1;} else if (aString > bString) {return 1;} else {return 0;}}var row,rows=[],startingPosition = 0;while(row = getRow()) {rows.push(row);}rows = rows.filter(function (row) {\n    var filterBy = null;\n    var includeRow = true;\n    if (req.query && req.query.filterBy) {\n      filterBy = JSON.parse(req.query.filterBy);\n    }\n    if (!filterBy) {\n      return true;\n    }\n    for (var i = 0; i < filterBy.length; i++) {\n      var currentValue = row.doc.data[filterBy[i].name];\n      if (filterBy[i].name === 'status' && (!currentValue || currentValue === '')) {\n        currentValue = 'Scheduled';\n      }\n      if (currentValue !== filterBy[i].value) {\n        includeRow = false;\n        break;\n      }\n    }\n    return includeRow;\n  });rows.sort(function (a, b) {\n    function defaultStatus(value) {\n      if (!value || value === '') {\n        return 'Scheduled';\n      } else {\n        return value;\n      }\n    }\n    var sortBy = '';\n    if (req.query && req.query.sortKey) {\n      sortBy = req.query.sortKey;\n    }\n    switch (sortBy) {\n      case 'appointmentType':\n      case 'location':\n      case 'provider':\n        return compareStrings(a.doc.data[sortBy], b.doc.data[sortBy]);\n      case 'date':\n        {\n          var startDiff = getCompareDate(a.doc.data.startDate) - getCompareDate(b.doc.data.startDate);\n          if (startDiff === 0) {\n            return getCompareDate(a.doc.data.endDate) - getCompareDate(b.doc.data.endDate);\n          } else {\n            return startDiff;\n          }\n        }\n      case 'status':\n        {\n          var aStatus = defaultStatus(a.doc.data[sortBy]);\n          var bStatus = defaultStatus(b.doc.data[sortBy]);\n          return compareStrings(aStatus, bStatus);\n        }\n      default:\n        {\n          return 0; // Don't sort\n        }\n    }\n  });if (req.query.sortDesc) {rows = rows.reverse();}if (req.query.sortStartKey) {var startKey = JSON.parse(req.query.sortStartKey);for (var i=0; i<rows.length; i++) {if (keysEqual(startKey, rows[i].key)) {startingPosition = i;break;}}}if (req.query.sortLimit) {rows = rows.slice(startingPosition, parseInt(req.query.sortLimit)+startingPosition);} else if (startingPosition > 0) {rows = rows.slice(startingPosition);}send(JSON.stringify({\"rows\" : rows}));}"}},{"_id":"_design/visit_by_date","_rev":"1-db61f993a1e1699c8205fee3434fc4c8","version":4,"views":{"visit_by_date":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'visit') {\n        var endDate = doc.data.endDate;\n    if (endDate && endDate !== \"\") {\n      endDate = new Date(endDate);\n      if (endDate.getTime) {\n        endDate = endDate.getTime();\n      }\n    }\n    var startDate = doc.data.startDate;\n    if (startDate && startDate !== \"\") {\n      startDate = new Date(startDate);\n      if (startDate.getTime) {\n        startDate = startDate.getTime();\n      }\n    }\n    emit([startDate, endDate, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/visit_by_discharge_date","_rev":"1-b4baca85d54e727966aeb2e8ad172136","version":2,"views":{"visit_by_discharge_date":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'visit') {\n        var endDate = doc.data.endDate;\n    if (endDate && endDate !== \"\") {\n      endDate = new Date(endDate);\n      if (endDate.getTime) {\n        endDate = endDate.getTime();\n      }\n    }\n    emit([endDate, doc._id]);\n      }\n    }\n  }"}}},{"_id":"_design/visit_by_patient","_rev":"1-f2865c74eefee716937492db914f2ccd","version":4,"views":{"visit_by_patient":{"map":"function(doc) {\n    var doctype, uidx;\n    if (doc._id && (uidx = doc._id.indexOf('_')) > 0 && !doc.data.archived) {\n      doctype = doc._id.substring(0, uidx);\n      if (doctype === 'visit') {\n        var endDate = doc.data.endDate;\n    if (endDate && endDate !== \"\") {\n      endDate = new Date(endDate);\n      if (endDate.getTime) {\n        endDate = endDate.getTime();\n      }\n    }\n    var startDate = doc.data.startDate;\n    if (startDate && startDate !== \"\") {\n      startDate = new Date(startDate);\n      if (startDate.getTime) {\n        startDate = startDate.getTime();\n      }\n    }\n    emit([doc.data.patient, startDate, endDate, doc.data.visitType, doc._id]);\n      }\n    }\n  }"}}},{"_id":"diagnosis_2_56dd3bf6-b39e-4778-b6dd-7f8673ad568e","_rev":"1-5fd319c5141754bf5e6c9cb172bb0d92","data":{"active":true,"date":"2017-03-13T04:00:00.000Z","diagnosis":"Tennis Elbow","secondaryDiagnosis":true,"archived":false,"lastModified":"2017-03-13T17:53:33.294Z","modifiedBy":"Admin User","modifiedFields":{"date":"2017-03-13T17:53:33.294Z","diagnosis":"2017-03-13T17:53:33.294Z","secondaryDiagnosis":"2017-03-13T17:53:33.294Z"}}},{"_id":"diagnosis_2_594cbc26-362a-4b8c-9072-7a01a8473a8f","_rev":"1-8d260e0152865090683362581f62ee1c","data":{"active":true,"date":"2017-03-13T04:00:00.000Z","diagnosis":"Broken Arm","secondaryDiagnosis":false,"archived":false,"lastModified":"2017-03-13T17:53:09.252Z","modifiedBy":"Admin User","modifiedFields":{"date":"2017-03-13T17:53:09.252Z","diagnosis":"2017-03-13T17:53:09.252Z"}}},{"_id":"patient_2_cd572865-dcc0-441e-a2ad-be400dc256da","_rev":"4-23a240576e87d23821b5364dc557a1dd","data":{"admitted":false,"address":null,"address2":null,"address3":null,"address4":null,"bloodType":null,"clinic":null,"country":null,"checkedIn":false,"customForms":{},"dateOfBirth":null,"economicClassification":null,"email":null,"externalPatientId":null,"familySupport1":null,"familySupport2":null,"familySupport3":null,"familySupport4":null,"familySupport5":null,"friendlyId":"P00001","firstName":"Joe","sex":"Male","occupation":null,"history":null,"insurance":null,"lastName":"Bagadonuts","livingArrangement":null,"middleName":"","notes":null,"otherIncome":null,"patientType":null,"parent":null,"phone":null,"placeOfBirth":null,"referredDate":null,"referredBy":null,"religion":null,"socialActionTaken":null,"socialRecommendation":null,"status":null,"archived":false,"lastModified":"2017-03-13T17:52:51.958Z","modifiedBy":"Admin User","paymentProfile":null,"payments":[],"operativePlans":[],"operationReports":[],"diagnoses":["594cbc26-362a-4b8c-9072-7a01a8473a8f","56dd3bf6-b39e-4778-b6dd-7f8673ad568e"],"allergies":[],"modifiedFields":{"customForms":"2017-03-13T17:52:51.958Z","firstName":"2017-03-13T17:52:51.958Z","middleName":"2017-03-13T17:52:51.958Z","lastName":"2017-03-13T17:52:51.958Z","sex":"2017-03-13T17:52:51.958Z","friendlyId":"2017-03-13T17:52:51.958Z"}},"_revisions":{"start":4,"ids":["23a240576e87d23821b5364dc557a1dd","c5b245740fbcb79be7d7483cd86ec4b2","3f976abe4ecc5911b9dbfaf3099e4419","199c75172e78cce74f87350865b5560a"]}}]}
{"seq":35}
